/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/app.ts":
/*!********************!*\
  !*** ./src/app.ts ***!
  \********************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst user_service_1 = __webpack_require__(/*! ./services/user-service */ \"./src/services/user-service.ts\");\nconst libraryService_1 = __webpack_require__(/*! ./services/libraryService */ \"./src/services/libraryService.ts\");\nconst pagination_1 = __webpack_require__(/*! ./utils/pagination */ \"./src/utils/pagination.ts\");\nclass App {\n    constructor() {\n        this.userService = new user_service_1.UserService();\n        this.libraryService = new libraryService_1.LibraryService(this.userService);\n        this.setupUserForm();\n        this.setupBookForm();\n        this.setupBorrowBookForm();\n        this.setupReturnBookForm();\n        this.setupDeleteBookForm();\n        this.setupDeleteUserForm();\n        this.setupSearchForm();\n        this.libraryPagination = new pagination_1.Pagination(\"books-navigation\", \"books-list\", this.libraryService);\n        this.usersPagination = new pagination_1.Pagination(\"users-navigation\", \"users-list\", this.userService);\n        this.messageModalButton = document.getElementById('message-modal-button');\n        this.messageModalBody = document.getElementById('message-modal-body');\n        this.messageModalLabel = document.getElementById('messageModalLabel');\n        this.libraryPagination.goToPage(1);\n        this.usersPagination.goToPage(1);\n    }\n    setupUserForm() {\n        const userCreationForm = document.getElementById(\"create-user-form\");\n        if (!userCreationForm)\n            return;\n        userCreationForm.addEventListener(\"submit\", (event) => {\n            event.preventDefault();\n            const handleUserCreation = () => {\n                const usernameInput = document.getElementById(\"username\");\n                const emailInput = document.getElementById(\"email\");\n                const username = usernameInput.value;\n                const email = emailInput.value;\n                this.userService.add(username, email);\n            };\n            try {\n                handleUserCreation();\n                userCreationForm.reset();\n                this.usersPagination.goToPage(1);\n            }\n            catch (err) {\n                console.log(err);\n            }\n        });\n    }\n    setupBookForm() {\n        const bookCreationForm = document.getElementById(\"create-book-form\");\n        if (!bookCreationForm)\n            return;\n        bookCreationForm.addEventListener(\"submit\", event => {\n            event.preventDefault();\n            const handleBookCreation = () => {\n                const bookName = document.getElementById(\"bookName\").value;\n                const author = document.getElementById(\"author\").value;\n                const releaseYear = parseInt(document.getElementById(\"releaseYear\").value);\n                this.libraryService.addBook(bookName, author, releaseYear);\n            };\n            try {\n                handleBookCreation();\n                bookCreationForm.reset();\n                this.libraryPagination.goToPage(1);\n            }\n            catch (err) {\n                console.log(err);\n            }\n        });\n    }\n    setupBorrowBookForm() {\n        const borrowBookForm = document.getElementById('borrow-book-form');\n        borrowBookForm.addEventListener('submit', event => {\n            event.preventDefault();\n            const handleBorrowBookProcess = () => {\n                const userId = parseInt(document.getElementById('borrow-user-id').value);\n                const bookId = parseInt(document.getElementById('borrow-book-id').value);\n                this.libraryService.borrowBook(userId, bookId);\n                const book = this.libraryService.getById(bookId);\n                if (!book)\n                    throw new Error(\"Error\");\n                const user = this.userService.getById(userId);\n                if (!user)\n                    throw new Error(\"Error\");\n                this.notifyUser('Book borrowed', `${book.getFullName()} has been borrowed by ${user.represent()}`);\n            };\n            try {\n                handleBorrowBookProcess();\n                borrowBookForm.reset();\n                this.libraryPagination.goToPage(1);\n            }\n            catch (err) {\n                alert(err);\n            }\n        });\n    }\n    setupReturnBookForm() {\n        const returnBookForm = document.getElementById('return-book-form');\n        returnBookForm.addEventListener('submit', event => {\n            event.preventDefault();\n            const handleReturnBookProcess = () => {\n                const userId = parseInt(document.getElementById('return-user-id').value);\n                const bookId = parseInt(document.getElementById('return-book-id').value);\n                this.libraryService.returnBook(userId, bookId);\n                const book = this.libraryService.getById(bookId);\n                if (!book)\n                    throw new Error(\"Error\");\n                this.notifyUser('Book returned', `${book.getFullName()} has been returned.`);\n            };\n            try {\n                handleReturnBookProcess();\n                returnBookForm.reset();\n                this.libraryPagination.goToPage(1);\n            }\n            catch (err) {\n                alert(err);\n            }\n        });\n    }\n    notifyUser(label, body) {\n        this.messageModalLabel.innerText = label;\n        this.messageModalBody.innerText = body;\n        this.messageModalButton.click();\n    }\n    setupSearchForm() {\n        const searchForm = document.getElementById('search-form');\n        searchForm.addEventListener('reset', event => {\n            event.preventDefault();\n            searchForm.reset();\n            this.libraryService.searchBook('', '');\n            this.libraryPagination.goToPage(1);\n        });\n        searchForm.addEventListener('submit', event => {\n            event.preventDefault();\n            const handleSearchBookProcess = () => {\n                const searchQuery = document.getElementById('search-book').value;\n                const optionsSelect = document.getElementById('search-book-option');\n                const searchOption = optionsSelect.value;\n                console.log(\"Search options\");\n                console.log(searchOption);\n                console.log(\"Search query\");\n                console.log(searchQuery);\n                this.libraryService.searchBook(searchQuery, searchOption);\n                this.libraryPagination.goToPage(1);\n            };\n            try {\n                handleSearchBookProcess();\n            }\n            catch (err) {\n                alert(err);\n            }\n        });\n    }\n    setupDeleteBookForm() {\n        const deleteBookForm = document.getElementById('delete-book-form');\n        deleteBookForm.addEventListener('submit', event => {\n            event.preventDefault();\n            const handleDeleteBookProcess = () => {\n                const bookId = parseInt(document.getElementById('delete-book-id').value);\n                this.libraryService.removeBook(bookId);\n            };\n            try {\n                handleDeleteBookProcess();\n                deleteBookForm.reset();\n                this.libraryPagination.goToPage(1);\n                this.notifyUser(\"Book deleted\", \"Book was successfully deleted\");\n            }\n            catch (err) {\n                this.notifyUser(\"Error occurred\", err);\n            }\n        });\n    }\n    setupDeleteUserForm() {\n        const deleteUserForm = document.getElementById('delete-user-form');\n        deleteUserForm.addEventListener('submit', event => {\n            event.preventDefault();\n            const handleDeleteUserProcess = () => {\n                const userId = parseInt(document.getElementById('delete-user-id').value);\n                this.userService.removeById(userId);\n            };\n            try {\n                handleDeleteUserProcess();\n                deleteUserForm.reset();\n                this.usersPagination.goToPage(1);\n                this.notifyUser(\"User deleted\", \"User was successfully deleted\");\n            }\n            catch (err) {\n                this.notifyUser(\"Error occurred\", err);\n            }\n        });\n    }\n}\ndocument.addEventListener('DOMContentLoaded', () => {\n    new App();\n});\n\n\n//# sourceURL=webpack://lab-app/./src/app.ts?");

/***/ }),

/***/ "./src/models/book.ts":
/*!****************************!*\
  !*** ./src/models/book.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Book = void 0;\nclass Book {\n    constructor(author, bookName, releaseYear) {\n        this.author = author || '';\n        this.bookName = bookName || '';\n        this.releaseYear = releaseYear || 0;\n        this.borrowed = false;\n        this.id = new Date().getTime();\n        this.borrowedBy = undefined;\n    }\n    getAuthor() {\n        return this.author;\n    }\n    getBookName() {\n        return this.bookName;\n    }\n    getReleaseYear() {\n        return this.releaseYear;\n    }\n    getId() {\n        return this.id;\n    }\n    represent() {\n        const str = `ID: ${this.id} - ${this.bookName} by ${this.author} (${this.releaseYear}). ${this.borrowedBy ? ` Borrowed By: ${this.borrowedBy}` : ''}`;\n        console.log(str);\n        return str;\n    }\n    getFullName() {\n        return `ID: ${this.id} - ${this.bookName} by ${this.author} (${this.releaseYear}).`;\n    }\n}\nexports.Book = Book;\n\n\n//# sourceURL=webpack://lab-app/./src/models/book.ts?");

/***/ }),

/***/ "./src/models/user.ts":
/*!****************************!*\
  !*** ./src/models/user.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.User = void 0;\nclass User {\n    constructor(email, username) {\n        this.email = email || '';\n        this.username = username || '';\n        this.id = new Date().getTime();\n        this.borrowedBooks = [];\n    }\n    getEmail() {\n        return this.email;\n    }\n    getId() {\n        return this.id;\n    }\n    getUsername() {\n        return this.username;\n    }\n    represent() {\n        return `ID: ${this.id} - ${this.username} (${this.email})`;\n    }\n    borrowBook(book) {\n        this.borrowedBooks.push(book);\n    }\n    takeBookBack(bookId) {\n        const book = this.borrowedBooks.filter(x => x.id === bookId)[0];\n        if (!book) {\n            throw new Error(\"User does not have this book\");\n        }\n        this.borrowedBooks = this.borrowedBooks.filter(x => x.id !== bookId);\n    }\n}\nexports.User = User;\n\n\n//# sourceURL=webpack://lab-app/./src/models/user.ts?");

/***/ }),

/***/ "./src/services/library.ts":
/*!*********************************!*\
  !*** ./src/services/library.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Library = void 0;\nclass Library {\n    constructor() {\n        this.items = [];\n    }\n    add(item) {\n        this.items.push(item);\n    }\n    remove(item) {\n        this.items = this.items.filter(x => x !== item);\n    }\n    removeById(id) {\n        const itemToDelete = this.items.filter(x => x.id === id)[0];\n        if (!itemToDelete) {\n            throw new Error(\"Item was not found\");\n        }\n        this.items = this.items.filter(x => x.id !== id);\n    }\n    find(id) {\n        return this.items.filter(x => x.id === id)[0];\n    }\n    getAll() {\n        return this.items;\n    }\n    getPaginated(pageNumber, pageSize) {\n        const start = (pageNumber - 1) * pageSize;\n        const end = start + pageSize;\n        return this.items.slice(start, end);\n    }\n    getTotalCount() {\n        return this.items.length;\n    }\n}\nexports.Library = Library;\n\n\n//# sourceURL=webpack://lab-app/./src/services/library.ts?");

/***/ }),

/***/ "./src/services/libraryService.ts":
/*!****************************************!*\
  !*** ./src/services/libraryService.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.LibraryService = void 0;\nconst validation_1 = __webpack_require__(/*! ../utils/validation */ \"./src/utils/validation.ts\");\nconst storage_1 = __webpack_require__(/*! ./storage */ \"./src/services/storage.ts\");\nconst library_1 = __webpack_require__(/*! ./library */ \"./src/services/library.ts\");\nconst book_1 = __webpack_require__(/*! ../models/book */ \"./src/models/book.ts\");\nclass LibraryService {\n    constructor(userService) {\n        this.booksKey = \"libraryBooks\";\n        this.userService = userService;\n        this.validation = validation_1.Validation.getInstance();\n        this.library = new library_1.Library();\n        this.storageService = storage_1.Storage.getInstance();\n        this.loadFromStorage();\n        this.allBooks = this.library.getAll();\n        this.queriedBooks = this.allBooks;\n    }\n    addBook(bookName, author, releaseYear) {\n        if (!this.validation.validateCreateBookRequest(bookName, author, releaseYear)) {\n            throw new Error(\"Invalid data for book\");\n        }\n        const book = new book_1.Book(author, bookName, releaseYear);\n        this.library.add(book);\n        const books = this.library.getAll();\n        this.storageService.save(this.booksKey, books);\n    }\n    removeBook(bookId) {\n        this.library.removeById(bookId);\n        const books = this.library.getAll();\n        this.storageService.save(this.booksKey, books);\n    }\n    getById(bookId) {\n        return this.library.find(bookId);\n    }\n    getPaginated(pageNumber, pageSize) {\n        const start = (pageNumber - 1) * pageSize;\n        const end = start + pageSize;\n        const books = this.queriedBooks.slice(start, end);\n        console.log(\"Queried books:\");\n        console.log(books);\n        return books;\n    }\n    getTotalCount() {\n        return this.queriedBooks.length;\n    }\n    borrowBook(userId, bookId) {\n        const user = this.userService.getById(userId);\n        console.log(\"user found\");\n        if (!user) {\n            throw new Error(\"User not found\");\n        }\n        console.log(\"Borrowed count:\");\n        console.log(user.borrowedBooks.length);\n        if (user.borrowedBooks.length >= 3) {\n            throw new Error(\"User already has 3 books\");\n        }\n        let book = this.library.find(bookId);\n        console.log(\"book found\");\n        if (!book || book.borrowed) {\n            throw new Error(\"Book not found or it was already taken by someone\");\n        }\n        book.borrowed = true;\n        book.borrowedBy = user.email;\n        user.borrowBook(book);\n        this.storageService.save(this.booksKey, this.library.getAll());\n    }\n    returnBook(userId, bookId) {\n        const user = this.userService.getById(userId);\n        if (!user) {\n            throw new Error(\"User not found\");\n        }\n        let book = this.library.find(bookId);\n        if (!book) {\n            throw new Error(\"Book not found or it was already taken by someone\");\n        }\n        user.takeBookBack(bookId);\n        book.borrowedBy = undefined;\n        book.borrowed = false;\n        this.storageService.save(this.booksKey, this.library.getAll());\n    }\n    searchBook(searchQuery, searchOption) {\n        if (searchQuery === '') {\n            this.queriedBooks = this.allBooks;\n            return;\n        }\n        switch (searchOption) {\n            case \"name\":\n                this.queriedBooks = this.allBooks.filter(x => x.bookName.includes(searchQuery));\n                break;\n            case \"author\":\n                this.queriedBooks = this.allBooks.filter(x => x.author.includes(searchQuery));\n                break;\n            default:\n                this.queriedBooks = this.allBooks;\n                break;\n        }\n    }\n    loadFromStorage() {\n        var _a;\n        const books = (_a = this.storageService.get(this.booksKey)) !== null && _a !== void 0 ? _a : [];\n        for (let book of books) {\n            const newBook = new book_1.Book();\n            newBook.id = book.id;\n            newBook.author = book.author;\n            newBook.bookName = book.bookName;\n            newBook.releaseYear = book.releaseYear;\n            newBook.borrowed = book.borrowed;\n            newBook.borrowedBy = book.borrowedBy;\n            this.library.add(newBook);\n        }\n        console.log(this.library.getAll());\n    }\n}\nexports.LibraryService = LibraryService;\n\n\n//# sourceURL=webpack://lab-app/./src/services/libraryService.ts?");

/***/ }),

/***/ "./src/services/storage.ts":
/*!*********************************!*\
  !*** ./src/services/storage.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Storage = void 0;\nclass Storage {\n    constructor() {\n    }\n    save(key, data) {\n        localStorage.setItem(key, JSON.stringify(data));\n    }\n    get(key) {\n        return JSON.parse(localStorage.getItem(key) || '[]');\n    }\n    clear() {\n        localStorage.clear();\n    }\n    static getInstance() {\n        if (!Storage.instance) {\n            Storage.instance = new Storage();\n        }\n        return Storage.instance;\n    }\n}\nexports.Storage = Storage;\n\n\n//# sourceURL=webpack://lab-app/./src/services/storage.ts?");

/***/ }),

/***/ "./src/services/user-service.ts":
/*!**************************************!*\
  !*** ./src/services/user-service.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.UserService = void 0;\nconst user_1 = __webpack_require__(/*! ../models/user */ \"./src/models/user.ts\");\nconst validation_1 = __webpack_require__(/*! ../utils/validation */ \"./src/utils/validation.ts\");\nconst storage_1 = __webpack_require__(/*! ./storage */ \"./src/services/storage.ts\");\nconst book_1 = __webpack_require__(/*! ../models/book */ \"./src/models/book.ts\");\nclass UserService {\n    constructor() {\n        this.usersKey = \"library-users\";\n        this.storage = storage_1.Storage.getInstance();\n        this.validation = validation_1.Validation.getInstance();\n        this.users = [];\n        this.loadFromStorage();\n    }\n    add(username, email) {\n        if (!this.validation.validateCreateUserRequest(username, email)) {\n            throw new Error(\"Invalid data for user\");\n        }\n        const user = new user_1.User(email, username);\n        this.users.push(user);\n        this.storage.save(this.usersKey, this.users);\n    }\n    remove(user) {\n        this.users = this.users.filter(x => x !== user);\n        this.storage.save(this.usersKey, this.users);\n    }\n    removeById(userId) {\n        this.users = this.users.filter(x => x.id !== userId);\n        this.storage.save(this.usersKey, this.users);\n    }\n    getById(userId) {\n        return this.users.filter(x => x.id === userId)[0];\n    }\n    getPaginated(pageNumber, pageSize) {\n        const start = (pageNumber - 1) * pageSize;\n        const end = start + pageSize;\n        return this.users.slice(start, end);\n    }\n    getTotalCount() {\n        return this.users.length;\n    }\n    loadFromStorage() {\n        const users = this.storage.get(this.usersKey);\n        for (let user of users) {\n            const newUser = new user_1.User();\n            newUser.email = user.email;\n            newUser.id = user.id;\n            newUser.username = user.username;\n            const newBooks = [];\n            const books = user.borrowedBooks;\n            for (let book of books) {\n                const newBook = new book_1.Book();\n                newBook.id = book.id;\n                newBook.author = book.author;\n                newBook.bookName = book.bookName;\n                newBook.releaseYear = book.releaseYear;\n                newBook.borrowed = book.borrowed;\n                newBook.borrowedBy = book.borrowedBy;\n                newBooks.push(newBook);\n            }\n            newUser.borrowedBooks = newBooks;\n            this.users.push(newUser);\n        }\n    }\n}\nexports.UserService = UserService;\n\n\n//# sourceURL=webpack://lab-app/./src/services/user-service.ts?");

/***/ }),

/***/ "./src/utils/pagination.ts":
/*!*********************************!*\
  !*** ./src/utils/pagination.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Pagination = void 0;\nclass Pagination {\n    constructor(paginationId, listId, paginatableItems, itemsPerPage = 5) {\n        this.currentPage = 1;\n        this.paginationId = paginationId;\n        this.listId = listId;\n        this.paginatableItems = paginatableItems;\n        this.itemsPerPage = itemsPerPage;\n        this.initListeners();\n        this.renderPageNumbers();\n    }\n    getTotalPages() {\n        return Math.ceil(this.paginatableItems.getTotalCount() / this.itemsPerPage);\n    }\n    goToPage(page) {\n        const totalPages = this.getTotalPages();\n        console.log(totalPages);\n        console.log(page);\n        if (totalPages == 0) {\n            this.clearPagination();\n        }\n        if (page < 1 || page > totalPages)\n            return;\n        this.currentPage = page;\n        this.updatePaginationUI();\n        this.renderPageNumbers();\n        this.renderItems();\n    }\n    renderPageNumbers() {\n        const totalPages = this.getTotalPages();\n        console.log(totalPages);\n        const paginationContainer = document.getElementById(this.paginationId);\n        if (!paginationContainer)\n            return;\n        Array.from(document.querySelectorAll(`.${this.paginationId}-page-number`)).forEach(el => el.remove());\n        for (let i = 1; i <= totalPages; i++) {\n            const pageItem = document.createElement('li');\n            pageItem.classList.add('page-item', `${this.paginationId}-page-number`);\n            if (i === this.currentPage) {\n                pageItem.classList.add('active');\n            }\n            const pageLink = document.createElement('a');\n            pageLink.classList.add('page-link');\n            pageLink.href = '#';\n            pageLink.textContent = i.toString();\n            pageLink.addEventListener('click', (e) => {\n                e.preventDefault();\n                this.goToPage(i);\n            });\n            pageItem.appendChild(pageLink);\n            console.log(pageItem);\n            paginationContainer.insertBefore(pageItem, document.getElementById(`${this.paginationId}-next-page`));\n        }\n        this.updatePaginationUI();\n    }\n    initListeners() {\n        var _a, _b;\n        (_a = document.getElementById(`${this.paginationId}-prev-page`)) === null || _a === void 0 ? void 0 : _a.addEventListener(\"click\", (e) => {\n            e.preventDefault();\n            this.goToPage(this.currentPage - 1);\n        });\n        (_b = document.getElementById(`${this.paginationId}-next-page`)) === null || _b === void 0 ? void 0 : _b.addEventListener(\"click\", (e) => {\n            e.preventDefault();\n            this.goToPage(this.currentPage + 1);\n        });\n    }\n    updatePaginationUI() {\n        var _a, _b, _c, _d;\n        const totalPages = this.getTotalPages();\n        (_b = (_a = document.getElementById(`${this.paginationId}-prev-page`)) === null || _a === void 0 ? void 0 : _a.parentElement) === null || _b === void 0 ? void 0 : _b.classList.toggle(\"disabled\", this.currentPage === 1);\n        (_d = (_c = document.getElementById(`${this.paginationId}-next-page`)) === null || _c === void 0 ? void 0 : _c.parentElement) === null || _d === void 0 ? void 0 : _d.classList.toggle(\"disabled\", this.currentPage === totalPages);\n    }\n    renderItems() {\n        const list = document.getElementById(this.listId);\n        if (!list)\n            return;\n        list.innerHTML = \"\";\n        const items = this.paginatableItems.getPaginated(this.currentPage, this.itemsPerPage);\n        for (let item of items) {\n            const li = document.createElement('li');\n            li.className = \"list-group-item d-flex justify-content-between\";\n            const text = document.createTextNode(item.represent());\n            const p = document.createElement('p');\n            p.className = \"mt-auto mb-auto\";\n            p.appendChild(text);\n            li.appendChild(p);\n            list.appendChild(li);\n        }\n    }\n    clearPagination() {\n        const paginationContainer = document.getElementById(this.paginationId);\n        if (!paginationContainer)\n            return;\n        Array.from(document.querySelectorAll(`.${this.paginationId}-page-number`)).forEach(el => el.remove());\n        const list = document.getElementById(this.listId);\n        if (!list)\n            return;\n        list.innerHTML = \"\";\n    }\n}\nexports.Pagination = Pagination;\n\n\n//# sourceURL=webpack://lab-app/./src/utils/pagination.ts?");

/***/ }),

/***/ "./src/utils/validation.ts":
/*!*********************************!*\
  !*** ./src/utils/validation.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Validation = void 0;\nclass Validation {\n    constructor() {\n        this.validaEmailRegExp = new RegExp(\"^[\\\\w-\\\\.]+@([\\\\w-]+\\\\.)+[\\\\w-]{2,4}$\");\n        this.validReleaseYearRegExp = new RegExp(\"^(0|[1-9][0-9]{0,3})$\");\n    }\n    validateCreateBookRequest(bookName, author, releaseYear) {\n        if (!bookName)\n            return false;\n        if (!author)\n            return false;\n        if (!releaseYear)\n            return false;\n        if (!this.validReleaseYearRegExp.test(releaseYear.toString()))\n            return false;\n        return true;\n    }\n    validateCreateUserRequest(username, email) {\n        if (!username)\n            return false;\n        if (!email)\n            return false;\n        if (!this.validaEmailRegExp.test(email))\n            return false;\n        return true;\n    }\n    static getInstance() {\n        if (!Validation.instance) {\n            Validation.instance = new Validation();\n        }\n        return Validation.instance;\n    }\n}\nexports.Validation = Validation;\n\n\n//# sourceURL=webpack://lab-app/./src/utils/validation.ts?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/app.ts");
/******/ 	
/******/ })()
;